---

---

<button id="themeToggle"
        aria-label="Cambiar tema"
        class="fixed z-50 p-2 transition-colors
               2xl:top-5 2xl:right-5 top-1 right-1
               text-black dark:text-white
               2xl:text-3xl text-base">
  <i id="themeIcon" class="fa-solid fa-circle-half-stroke"></i>
</button>

<script>
  /** Clave de almacenamiento */
  const STORAGE_KEY = 'theme-preference';        // 'light' | 'dark' | 'system'

  /** Elementos DOM */
  const systemTheme = window.matchMedia('(prefers-color-scheme: dark)');
  const btn  = document.getElementById('themeToggle') || document.createElement('button');
  const icon = document.getElementById('themeIcon') || document.createElement('icon');

  /** MediaQuery para saber si el SO est√° en dark */
  const mq = window.matchMedia('(prefers-color-scheme: dark)');

  /** Lee el √∫ltimo valor o ‚Äúsystem‚Äù por defecto */
  let theme = localStorage.getItem(STORAGE_KEY) || 'system';

  /** Aplica la elecci√≥n al <html> y al icono */
  function applyTheme({value}: { value: any }) {
    if (value === 'light') {
      document.documentElement.classList.remove('dark');
      document.documentElement.classList.add('light');

    } else if (value === 'dark') {
      document.documentElement.classList.remove('light');
      document.documentElement.classList.add('dark');

    } else { // system ‚Üí sin override; obedece al SO
      document.documentElement.classList.toggle('dark', mq.matches);
      document.documentElement.classList.toggle('light', !mq.matches);
    }

    updateIcon({value: value});
  }

  /** Actualiza icono + tooltip */
  function updateIcon({value}: { value: any }) {
    icon.className =
      'fa-solid ' +
      (value === 'light'  ? 'fa-sun'                 // ‚òÄÔ∏è
       : value === 'dark' ? 'fa-moon'                // üåô
       :                   'fa-circle-half-stroke'); // üåì
    btn.title = `${value}`;                          // tooltip
  }

  /** Devuelve el pr√≥ximo estado al hacer clic */
  const next = ({value}: { value: any }) =>
    value === 'light'  ? 'dark'
    : value === 'dark' ? 'system'
    :                   'light';

  /* ‚Äî‚Äî‚Äî Estado inicial ‚Äî‚Äî‚Äî */
  applyTheme({value: theme});

  /* ‚Äî‚Äî‚Äî Reactivar ‚Äúsystem‚Äù cuando el SO cambia ‚Äî‚Äî‚Äî */
  mq.addEventListener('change', () => {
    if (theme === 'system') applyTheme({value: 'system'});
  });

  /* ‚Äî‚Äî‚Äî Clic = siguiente estado ‚Äî‚Äî‚Äî */
  btn.addEventListener('click', () => {
    theme = next({value: theme});
    localStorage.setItem(STORAGE_KEY, theme);
    applyTheme({value: theme});
  });

  /* Suscribe al cambio de tema del SO */
  systemTheme.addEventListener('change', () => {
      if (theme === 'system') applyTheme({value: 'system'});
  });

</script>
